[tool.poetry]
name = "muffin"
version = "0.98.0"
description = "Muffin is a fast, simple and asyncronous web-framework for Python 3 (asyncio, trio, curio)"
readme = "README.rst"
license = "MIT"
authors = ["Kirill Klenov <horneds@gmail.com>"]
keywords = ["asgi", "web", "web framework", "asyncio", "trio", "curio"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Internet :: WWW/HTTP",
  "Framework :: AsyncIO",
  "Framework :: Trio",
]
homepage = "https://github.com/klen/muffin"
repository = "https://github.com/klen/muffin"
documentation = "https://klen.github.io/muffin"
packages = [{ include = "muffin" }]

[tool.poetry.urls]
changelog = "https://raw.githubusercontent.com/klen/muffin/master/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.8"
asgi-tools = "^0"
modconfig = "^1"
ujson = "*"

# Optional
gunicorn = { version = "^20.1.0", optional = true }
uvicorn = { version = "^0.21.1", optional = true, extras = ["standard"] }

[tool.poetry.scripts]
muffin = "muffin.manage:cli"

[tool.poetry.plugins]
pytest11 = { muffin_pytest = "muffin.pytest" }

[tool.poetry.extras]
standard = ["gunicorn", "uvicorn"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
aiofile = "*"
pytest = "*"
pytest-mypy = "*"
ruff = "*"
pytest-aio = { extras = ["curio", "trio"], version = "*" }
pre-commit = "*"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "*"
pydata-sphinx-theme = "*"
sphinx-copybutton = "*"

[tool.pytest.ini_options]
addopts = "-xsvl"
muffin_app = "tests:app"

[tool.mypy]
packages = ["muffin"]
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py38"
exclude = [".venv", "docs", "example"]
select = ["ALL"]
ignore = ["D", "UP", "ANN", "DJ", "EM", "RSE", "SLF", "RET", "S101", "PLR2004", "N804", "COM"]

[tool.ruff.per-file-ignores]
"tests/*" = ["ARG", "TRY", "F", "PGH", "PLR", "PLW", "PTH", "SIM", "RET504", "T20"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
preview = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py38,py39,py310,py311,pypy39

[testenv]
allowlist_externals = poetry
commands_pre =
    poetry install --no-root --sync --with dev
commands =
    poetry run pytest --mypy tests --import-mode importlib

[testenv:pypy39]
allowlist_externals = poetry
commands_pre =
    poetry install --no-root --sync --with dev
commands =
    poetry run pytest tests --import-mode importlib
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
